"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetalsWindowStateDidChange = exports.MetalsDidFocus = exports.ExecuteClientCommand = void 0;
const vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
/**
 * The Metals execute client command is sent from the server to the client to
 * trigger an action inside the editor. This notification is a copy of the
 * workspace/executeCommand except:
 *
 *  - execute client command is a notification, not a request
 *  - execute client command is initiated from the server, not the client
 *
 *  - https://scalameta.org/metals/docs/editors/new-editor.html#metalsexecuteclientcommand
 *
 * All client commands can be found in the ClientCommands enum.
 */
var ExecuteClientCommand;
(function (ExecuteClientCommand) {
    ExecuteClientCommand.type = new vscode_languageserver_protocol_1.NotificationType("metals/executeClientCommand");
})(ExecuteClientCommand = exports.ExecuteClientCommand || (exports.ExecuteClientCommand = {}));
/**
 * The Metals did focus notification is sent from the client to the server when the editor changes focus to a new text document. Unlike textDocument/didOpen, the did focus notification is sent even when the text document is already open.
 *
 * - https://scalameta.org/metals/docs/editors/new-editor.html#metalsdidfocustextdocument
 */
var MetalsDidFocus;
(function (MetalsDidFocus) {
    MetalsDidFocus.type = new vscode_languageserver_protocol_1.NotificationType("metals/didFocusTextDocument");
})(MetalsDidFocus = exports.MetalsDidFocus || (exports.MetalsDidFocus = {}));
/**
 * The `metals/windowStateDidChange` notification is sent from the client to
 * the server to indicate whether the editor application window is focused or
 * not. When the editor window is not focused, Metals tries to avoid triggering
 * expensive computation in the background such as compilation.
 *
 * - https://scalameta.org/metals/docs/editors/new-editor.html#metalswindowstatedidchange
 */
var MetalsWindowStateDidChange;
(function (MetalsWindowStateDidChange) {
    MetalsWindowStateDidChange.type = new vscode_languageserver_protocol_1.NotificationType("metals/windowStateDidChange");
})(MetalsWindowStateDidChange = exports.MetalsWindowStateDidChange || (exports.MetalsWindowStateDidChange = {}));
