/**
 * @since 2.10.0
 */
import * as E from './Eq';
import * as M from './Monoid';
import * as S from './Semigroup';
import * as O from './Ord';
import * as Sh from './Show';
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
export var Eq = E.eqString;
/**
 * `string` semigroup under concatenation.
 *
 * @example
 * import * as S from 'fp-ts/string'
 *
 * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')
 *
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
export var Semigroup = S.semigroupString;
/**
 * `string` monoid under concatenation.
 *
 * The `empty` value is `''`.
 *
 * @example
 * import * as S from 'fp-ts/string'
 *
 * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')
 *
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
export var Monoid = M.monoidString;
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
export var Ord = O.ordString;
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
export var Show = Sh.showString;
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * An empty `string`.
 *
 * @since 2.10.0
 */
export var empty = '';
/**
 * Test whether a `string` is empty.
 *
 * @since 2.10.0
 */
export var isEmpty = function (s) { return s.length === 0; };
/**
 * Calculate the number of characters in a `string`.
 *
 * @since 2.10.0
 */
export var size = function (s) { return s.length; };
